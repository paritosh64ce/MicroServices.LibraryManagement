// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.Subscriptions.DbContext;

#nullable disable

namespace Repository.Subscriptions.Migrations
{
    [DbContext(typeof(SubscriptionDbContext))]
    partial class SubscriptionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Repository.Subscriptions.Domain.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("BOOK_ID");

                    b.Property<DateTime?>("DateReturned")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_RETURNED");

                    b.Property<DateTime>("DateSubscribed")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_SUBSCRIBED");

                    b.Property<string>("SubscriberName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SUBSCRIBER_NAME");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            DateSubscribed = new DateTime(2023, 3, 3, 16, 42, 15, 277, DateTimeKind.Utc).AddTicks(3610),
                            SubscriberName = "Paritosh"
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            DateSubscribed = new DateTime(2023, 3, 3, 16, 42, 15, 277, DateTimeKind.Utc).AddTicks(3615),
                            SubscriberName = "SecondUser"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
